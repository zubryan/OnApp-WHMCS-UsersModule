<?php
// This class was automatically generated by build task
// You can change it manually, but it will be overwritten on next build

use Codeception\Maybe;

class WebGuy extends \Codeception\AbstractGuy
{
    
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::confirmPopup()
    */
    public function confirmPopup() {
        $this->scenario->action('confirmPopup', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::cancelPopup()
    */
    public function cancelPopup() {
        $this->scenario->action('cancelPopup', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::assertPopupMessage()
    */
    public function assertPopupMessage($message) {
        $this->scenario->action('assertPopupMessage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::setPopupText()
    */
    public function setPopupText($test) {
        $this->scenario->action('setPopupText', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::doubleClick()
    */
    public function doubleClick($link) {
        $this->scenario->action('doubleClick', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::clickWithRightButton()
    */
    public function clickWithRightButton($link) {
        $this->scenario->action('clickWithRightButton', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::moveMouseOver()
    */
    public function moveMouseOver($link) {
        $this->scenario->action('moveMouseOver', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::focus()
    */
    public function focus($el) {
        $this->scenario->action('focus', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::blur()
    */
    public function blur($el) {
        $this->scenario->action('blur', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::dragAndDrop()
    */
    public function dragAndDrop($el1, $el2) {
        $this->scenario->action('dragAndDrop', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::seeElement()
    */
    public function seeElement($selector) {
        $this->scenario->assertion('seeElement', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::pressKey()
    */
    public function pressKey($element, $char, $modifier = null) {
        $this->scenario->action('pressKey', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::pressKeyUp()
    */
    public function pressKeyUp($element, $char, $modifier = null) {
        $this->scenario->action('pressKeyUp', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::pressKeyDown()
    */
    public function pressKeyDown($element, $char, $modifier = null) {
        $this->scenario->action('pressKeyDown', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::wait()
    */
    public function wait($miliseconds) {
        $this->scenario->action('wait', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::waitForJS()
    */
    public function waitForJS($miliseconds, $jsCondition) {
        $this->scenario->action('waitForJS', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::executeJs()
    */
    public function executeJs($jsCode) {
        $this->scenario->action('executeJs', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::amOnPage()
    */
    public function amOnPage($page) {
        $this->scenario->condition('amOnPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::dontSee()
    */
    public function dontSee($text, $selector = null) {
        $this->scenario->action('dontSee', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::see()
    */
    public function see($text, $selector = null) {
        $this->scenario->assertion('see', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::seeLink()
    */
    public function seeLink($text, $url = null) {
        $this->scenario->assertion('seeLink', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::dontSeeLink()
    */
    public function dontSeeLink($text, $url = null) {
        $this->scenario->action('dontSeeLink', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::click()
    */
    public function click($link) {
        $this->scenario->action('click', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::reloadPage()
    */
    public function reloadPage() {
        $this->scenario->action('reloadPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::moveBack()
    */
    public function moveBack() {
        $this->scenario->action('moveBack', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::moveForward()
    */
    public function moveForward() {
        $this->scenario->action('moveForward', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::fillField()
    */
    public function fillField($field, $value) {
        $this->scenario->action('fillField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::selectOption()
    */
    public function selectOption($select, $option) {
        $this->scenario->action('selectOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::checkOption()
    */
    public function checkOption($option) {
        $this->scenario->action('checkOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::uncheckOption()
    */
    public function uncheckOption($option) {
        $this->scenario->action('uncheckOption', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::seeInCurrentUrl()
    */
    public function seeInCurrentUrl($uri) {
        $this->scenario->assertion('seeInCurrentUrl', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::attachFile()
    */
    public function attachFile($field, $filename) {
        $this->scenario->action('attachFile', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::seeCheckboxIsChecked()
    */
    public function seeCheckboxIsChecked($checkbox) {
        $this->scenario->assertion('seeCheckboxIsChecked', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::dontSeeCheckboxIsChecked()
    */
    public function dontSeeCheckboxIsChecked($checkbox) {
        $this->scenario->action('dontSeeCheckboxIsChecked', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::seeInField()
    */
    public function seeInField($field, $value) {
        $this->scenario->assertion('seeInField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::dontSeeInField()
    */
    public function dontSeeInField($field, $value) {
        $this->scenario->action('dontSeeInField', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::grabTextFrom()
    */
    public function grabTextFrom($cssOrXPathOrRegex) {
        $this->scenario->action('grabTextFrom', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::grabValueFrom()
    */
    public function grabValueFrom($field) {
        $this->scenario->action('grabValueFrom', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\Selenium2::grabAttribute()
    */
    public function grabAttribute() {
        $this->scenario->action('grabAttribute', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\WebHelper::getServerID()
    */
    public function getServerID() {
        $this->scenario->action('getServerID', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\WebHelper::getServerGroupID()
    */
    public function getServerGroupID() {
        $this->scenario->action('getServerGroupID', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\WebHelper::getTokenFromPage()
    */
    public function getTokenFromPage() {
        $this->scenario->action('getTokenFromPage', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\WebDebug::makeAScreenshot()
    */
    public function makeAScreenshot($name = null) {
        $this->scenario->action('makeAScreenshot', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }

 
   /**
    * This method is generated. DO NOT EDIT.
    *
    * @see \Codeception\Module\WebDebug::makeAResponseDump()
    */
    public function makeAResponseDump($name) {
        $this->scenario->action('makeAResponseDump', func_get_args());
        if ($this->scenario->running()) {
            $result = $this->scenario->runStep();
            return new Maybe($result);
        }
        return new Maybe();
    }
}

